name: Deploy to Bunny CDN

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies and build
        run: |
          npm ci
          npm run build

      # ðŸš€ Upload site (HTML/CSS/JS)
      - name: Upload site files to Bunny via HTTPS API
        env:
          BUNNY_API_KEY: ${{ secrets.BUNNY_SITE_PASSWORD }}
          BUNNY_SITE_ZONE: ${{ secrets.BUNNY_SITE_ZONE_NAME }}
        run: |
          echo "ðŸš€ Uploading site files..."
          find ./dist -type f \
            ! -name "*.jpg" ! -name "*.jpeg" ! -name "*.png" \
            ! -name "*.webp" ! -name "*.avif" ! -name "*.mp4" \
            ! -name "*.webm" ! -path "*/.*" | while read file; do
              relpath="${file#./dist/}"
              echo "â†’ Uploading: $relpath"
              curl -sf -X PUT -H "AccessKey: $BUNNY_API_KEY" \
                   -T "$file" \
                   "https://storage.bunnycdn.com/$BUNNY_SITE_ZONE/$relpath"
            done

      # ðŸŽž Upload media (images/videos)
      - name: Upload media files to Bunny via HTTPS API
        env:
          BUNNY_API_KEY: ${{ secrets.BUNNY_API_KEY }}
          BUNNY_MEDIA_ZONE: ${{ secrets.BUNNY_MEDIA_ZONE }}
        run: |
          echo "ðŸŽž Uploading media files..."
          if [ -d "./dist/assets" ]; then
            find ./dist/assets -type f \
              ! -name "*.css" ! -name "*.js" ! -name "*.json" \
              ! -name "*.map" ! -path "*/.*" | while read file; do
                relpath="${file#./dist/assets/}"
                echo "â†’ Uploading: $relpath"
                curl -sf -X PUT -H "AccessKey: $BUNNY_API_KEY" \
                     -T "$file" \
                     "https://storage.bunnycdn.com/$BUNNY_MEDIA_ZONE/assets/$relpath"
              done
          fi

      # ðŸ§¹ Purge CDN cache
      - name: Purge Bunny CDN cache
        env:
          BUNNY_API_KEY: ${{ secrets.BUNNY_API_KEY }}
          BUNNY_PULLZONE_ID: ${{ secrets.BUNNY_PULLZONE_ID }}
        run: |
          echo "ðŸ§¹ Purging CDN cache..."
          curl -s -X POST "https://api.bunny.net/pullzone/${BUNNY_PULLZONE_ID}/purgeCache" \
            -H "AccessKey: ${BUNNY_API_KEY}" \
            -H "Accept: application/json"
