name: Deploy to Bunny CDN

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies and build
        run: |
          npm ci
          npm run build

      # üöÄ Upload site
      - name: Upload all site files to Bunny via HTTPS API
        env:
          BUNNY_API_KEY: ${{ secrets.BUNNY_SITE_API_KEY }}
          BUNNY_SITE_ZONE: ${{ secrets.BUNNY_SITE_ZONE_NAME }}
        run: |
          echo "üöÄ Uploading entire site to Bunny Storage..."
          find ./dist -type f ! -path "*/.*" | while read file; do
            relpath="${file#./dist/}"
            echo "‚Üí Uploading: $relpath"
            response=$(curl -s -o /dev/null -w "%{http_code}" \
              -X PUT \
              -H "AccessKey: ${BUNNY_API_KEY}" \
              -T "$file" \
              "https://storage.bunnycdn.com/${BUNNY_SITE_ZONE}/${relpath}")

            if [ "$response" -ge 200 ] && [ "$response" -lt 300 ]; then
              echo "‚úÖ Uploaded successfully: $relpath"
            else
              echo "‚ùå Failed to upload $relpath (HTTP $response)"
              exit 1
            fi
          done

      # üßπ Purge CDN cache
      - name: Purge Bunny CDN cache
        env:
          BUNNY_API_KEY: ${{ secrets.BUNNY_API_KEY }}
          BUNNY_PULLZONE_ID: ${{ secrets.BUNNY_PULLZONE_ID }}
        run: |
          echo "üßπ Purging CDN cache..."
          curl -s -X POST "https://api.bunny.net/pullzone/${BUNNY_PULLZONE_ID}/purgeCache" \
            -H "AccessKey: ${BUNNY_API_KEY}" \
            -H "Accept: application/json"
